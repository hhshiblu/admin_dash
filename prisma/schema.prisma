generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type AdminorderOrderArray {
  createAt        DateTime                       @db.Date
  delivery_status String
  orderId         String                         @db.ObjectId
  paymentInfo     String
  price           Int
  products        AdminorderOrderArrayProducts[]
  sellerId        String
  shippingAddress String
}

type AdminorderOrderArrayProducts {
  productInfo AdminorderOrderArrayProductsProductInfo
  quantity    Int
}

type AdminorderOrderArrayProductsProductInfo {
  v             Int                                              @map("__v")
  id            String                                           @map("_id") @db.ObjectId
  category      String
  color         String[]
  createdAt     DateTime                                         @db.Date
  description   String
  discountPrice Int
  images        String[]
  name          String
  originalPrice Int
  quantity      Float
  ratings       Float?
  reviews       AdminorderOrderArrayProductsProductInfoReviews[]
  seller        AdminorderOrderArrayProductsProductInfoSeller?
  sellerId      String
  size          String[]
  sold_out      Int
  stock         Int
  subCategory   String?
  tags          String
}

type AdminorderOrderArrayProductsProductInfoReviews {
  id        String                                             @map("_id") @db.ObjectId
  comment   String
  createdAt DateTime                                           @db.Date
  productId String
  rating    Int
  user      AdminorderOrderArrayProductsProductInfoReviewsUser
}

type AdminorderOrderArrayProductsProductInfoReviewsUser {
  v           Int                                                           @map("__v")
  id          String                                                        @map("_id")
  addresses   AdminorderOrderArrayProductsProductInfoReviewsUserAddresses[]
  avatar      String?
  cpassword   String
  createdAt   String
  email       String
  name        String
  /// Multiple data types found: Float: 50%, Int: 50% out of 6 sampled entries
  phoneNumber Json
  role        String
}

type AdminorderOrderArrayProductsProductInfoReviewsUserAddresses {
  id          String @map("_id")
  address1    String
  address2    String
  addressType String
  city        String
  country     String
  zipCode     Int
}

type AdminorderOrderArrayProductsProductInfoSeller {
  v                Int      @map("__v")
  id               String   @map("_id") @db.ObjectId
  address          String
  availableBalance Int
  avatar           String
  createdAt        DateTime @db.Date
  email            String
  name             String
  phoneNumber      Int
  role             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  zipCode          Int
}

type AdminorderShippingInfo {
  add String
}

type CartsCartItems {
  id        String @map("_id") @db.ObjectId
  productId String @db.ObjectId
  quantity  Int
}

type EventsSeller {
  v                Int      @map("__v")
  id               String   @map("_id") @db.ObjectId
  address          String
  availableBalance Int
  avatar           String
  createdAt        DateTime @db.Date
  email            String
  name             String
  phoneNumber      Int
  role             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  zipCode          Int
}

type ProductsReviews {
  id        String              @map("_id") @db.ObjectId
  comment   String
  createdAt DateTime            @db.Date
  productId String
  rating    Int
  user      ProductsReviewsUser
}

type ProductsReviewsUser {
  v           Int                            @map("__v")
  id          String                         @map("_id")
  addresses   ProductsReviewsUserAddresses[]
  avatar      String?
  cpassword   String
  createdAt   String
  email       String
  name        String
  /// Multiple data types found: Float: 66.7%, Int: 33.3% out of 3 sampled entries
  phoneNumber Json
  role        String
}

type ProductsReviewsUserAddresses {
  id          String @map("_id")
  address1    String
  address2    String
  addressType String
  city        String
  country     String
  zipCode     Int
}

type ProductsSeller {
  v                Int                           @map("__v")
  id               String                        @map("_id") @db.ObjectId
  address          String
  /// Multiple data types found: Float: 44.4%, Int: 55.6% out of 9 sampled entries
  availableBalance Json
  avatar           String
  createdAt        DateTime                      @db.Date
  email            String
  name             String
  phoneNumber      Int
  role             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  withdrawMethod   ProductsSellerWithdrawMethod?
  zipCode          Int
}

type ProductsSellerWithdrawMethod {
  bankAccountNumber String
  bankAddress       String
  bankCountry       String
  bankHolderName    String
  bankName          String
  bankSwiftCode     String
}

type SellerCustomersMyFriends {
  fdId  String
  image String?
  name  String?
}

type SellerOrderProducts {
  productInfo SellerOrderProductsProductInfo
  quantity    Int
}

type SellerOrderProductsProductInfo {
  v             Int                                     @map("__v")
  id            String                                  @map("_id") @db.ObjectId
  category      String
  color         String[]
  createdAt     DateTime                                @db.Date
  description   String
  discountPrice Int
  images        String[]
  name          String
  originalPrice Int
  quantity      Float
  ratings       Float?
  reviews       SellerOrderProductsProductInfoReviews[]
  seller        SellerOrderProductsProductInfoSeller?
  sellerId      String
  size          String[]
  sold_out      Int
  stock         Int
  subCategory   String?
  tags          String
}

type SellerOrderProductsProductInfoReviews {
  id        String                                    @map("_id") @db.ObjectId
  comment   String
  createdAt DateTime                                  @db.Date
  productId String
  rating    Int
  user      SellerOrderProductsProductInfoReviewsUser
}

type SellerOrderProductsProductInfoReviewsUser {
  v           Int                                                  @map("__v")
  id          String                                               @map("_id")
  addresses   SellerOrderProductsProductInfoReviewsUserAddresses[]
  avatar      String?
  cpassword   String
  createdAt   String
  email       String
  name        String
  /// Multiple data types found: Float: 50%, Int: 50% out of 16 sampled entries
  phoneNumber Json
  role        String
}

type SellerOrderProductsProductInfoReviewsUserAddresses {
  id          String @map("_id")
  address1    String
  address2    String
  addressType String
  city        String
  country     String
  zipCode     Int
}

type SellerOrderProductsProductInfoSeller {
  v                Int      @map("__v")
  id               String   @map("_id") @db.ObjectId
  address          String
  availableBalance Int
  avatar           String
  createdAt        DateTime @db.Date
  email            String
  name             String
  phoneNumber      Int
  role             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  zipCode          Int
}

type UsersAddresses {
  id          String @map("_id") @db.ObjectId
  address     String
  addressType String
  district    String
  division    String
  name        String
  number      Int
  zipCode     Int
}

type WithdrawsSeller {
  v                Int                           @map("__v")
  id               String                        @map("_id") @db.ObjectId
  address          String
  availableBalance Float
  avatar           String
  createdAt        DateTime                      @db.Date
  email            String
  name             String
  phoneNumber      Int
  role             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  withdrawMethod   WithdrawsSellerWithdrawMethod
  zipCode          Int
}

type WithdrawsSellerWithdrawMethod {
  bankAccountNumber String
  bankAddress       String
  bankCountry       String
  bankHolderName    String
  bankName          String
  bankSwiftCode     String
}

model adminorder {
  id              String                 @id @default(auto()) @map("_id") @db.ObjectId
  createAt        DateTime               @db.Date
  delivery_status String
  orderArray      AdminorderOrderArray[]
  orderId         String                 @db.ObjectId
  shippingInfo    AdminorderShippingInfo
  totalPrice      Int
}

model banars {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  v               Int      @map("__v")
  avatar          String
  createdAt       DateTime @db.Date
  role            Int
  urlbanarproduct String
}

model cardproducts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  productId String   @db.ObjectId
  quantity  Int
  updatedAt DateTime @db.Date
  userId    String   @db.ObjectId
}

model carts {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  v         Int              @map("__v")
  cartItems CartsCartItems[]
  createdAt DateTime         @db.Date
  updatedAt DateTime         @db.Date
  userId    String           @db.ObjectId
}

model categories {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  parentId String?
  slug     String  @unique(map: "slug_1")
}

model conversations {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  v             Int      @map("__v")
  createdAt     DateTime @db.Date
  groupTitle    String
  lastMessage   String?
  lastMessageId String?
  members       String[]
  updatedAt     DateTime @db.Date
}

model coupouncodes {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  maxAmount Int?
  minAmount Int?
  name      String   @unique(map: "name_1")
  sellerId  String
  value     Int
}

model events {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  Finish_Date   DateTime     @db.Date
  v             Int          @map("__v")
  category      String
  createdAt     DateTime     @db.Date
  description   String
  discountPrice Int
  images        String[]
  name          String
  originalPrice Int
  seller        EventsSeller
  sellerId      String
  sold_out      Int
  start_Date    DateTime     @db.Date
  status        String
  stock         Int
  tags          String
}

model messages {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  v              Int      @map("__v")
  conversationId String
  createdAt      DateTime @db.Date
  sender         String
  text           String
  updatedAt      DateTime @db.Date
}

model products {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  v             Int               @map("__v")
  category      String
  color         String[]
  createdAt     DateTime          @db.Date
  description   String
  discountPrice Int
  images        String[]
  name          String
  originalPrice Int
  quantity      Float?
  /// Multiple data types found: Float: 50%, Int: 50% out of 2 sampled entries
  ratings       Json?
  reviews       ProductsReviews[]
  seller        ProductsSeller
  sellerId      String
  size          String[]
  sold_out      Int
  stock         Int
  subCategory   String?
  tags          String
}

model sellerOrder {
  id              String                @id @default(auto()) @map("_id") @db.ObjectId
  createAt        DateTime              @db.Date
  delivery_status String
  orderId         String                @db.ObjectId
  paymentInfo     String
  price           Int
  products        SellerOrderProducts[]
  sellerId        String
  shippingAddress String
}

model seller_admin_messages {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model seller_customer_messages {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  createdAt  DateTime @db.Date
  message    String
  receverId  String
  senderId   String
  senderName String
  status     String
  updatedAt  DateTime @db.Date
}

model seller_customers {
  id        String                     @id @default(auto()) @map("_id") @db.ObjectId
  v         Int                        @map("__v")
  createdAt DateTime                   @db.Date
  myFriends SellerCustomersMyFriends[]
  myId      String
  updatedAt DateTime                   @db.Date
}

model shops {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  v                Int      @map("__v")
  address          String
  /// Multiple data types found: Float: 50%, Int: 50% out of 2 sampled entries
  availableBalance Json
  avatar           String
  createdAt        DateTime @db.Date
  description      String?
  email            String
  name             String
  password         String
  phoneNumber      Int
  role             String
  status           String
  /// Could not determine type: the field only had null or empty values in the sample set.
  transections     Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  withdrawMethod   Json?
  zipCode          Int
}

model users {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  v           Int              @map("__v")
  addresses   UsersAddresses[]
  cpassword   String
  createdAt   DateTime         @db.Date
  email       String
  name        String
  password    String
  phoneNumber Int
  role        String
}

model withdraws {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  v         Int             @map("__v")
  amount    Int
  createdAt DateTime        @db.Date
  seller    WithdrawsSeller
  status    String
  updatedAt DateTime        @db.Date
}
